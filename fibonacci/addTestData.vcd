$date
	Thu Oct 27 02:17:00 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module mips_tb $end
$var reg 1 ! clk $end
$scope module myTop $end
$var wire 1 ! clk $end
$var wire 5 " writeRegW [4:0] $end
$var wire 5 # writeRegM [4:0] $end
$var wire 5 $ writeRegE [4:0] $end
$var wire 32 % writeDataE [31:0] $end
$var wire 32 & v0W [31:0] $end
$var wire 32 ' v0M [31:0] $end
$var wire 32 ( v0E [31:0] $end
$var wire 32 ) v0D [31:0] $end
$var wire 1 * stallF $end
$var wire 1 + stallD $end
$var wire 32 , signImmD [31:0] $end
$var wire 5 - rtE [4:0] $end
$var wire 5 . rtD [4:0] $end
$var wire 5 / rsE [4:0] $end
$var wire 5 0 rsD [4:0] $end
$var wire 32 1 resultW [31:0] $end
$var wire 1 2 regWriteW $end
$var wire 1 3 regWriteM $end
$var wire 1 4 regWriteE $end
$var wire 1 5 regWriteD $end
$var wire 1 6 regDstD $end
$var wire 32 7 readDataM [31:0] $end
$var wire 5 8 rdD [4:0] $end
$var wire 32 9 rd2D [31:0] $end
$var wire 32 : rd1D [31:0] $end
$var wire 1 ; pcSrcD $end
$var wire 32 < pcPlus4F [31:0] $end
$var wire 32 = pcJumpD [31:0] $end
$var wire 32 > pcBranchD [31:0] $end
$var wire 1 ? memWriteE $end
$var wire 1 @ memWriteD $end
$var wire 1 A memToRegM $end
$var wire 1 B memToRegE $end
$var wire 1 C memToRegD $end
$var wire 1 D jumpD $end
$var wire 1 E isSyscallW $end
$var wire 1 F isSyscallM $end
$var wire 1 G isSyscallE $end
$var wire 1 H isSyscallD $end
$var wire 32 I instrF [31:0] $end
$var wire 2 J forwardBE [1:0] $end
$var wire 1 K forwardBD $end
$var wire 2 L forwardAE [1:0] $end
$var wire 1 M forwardAD $end
$var wire 1 N flushE $end
$var wire 1 O branchD $end
$var wire 1 P aluSrcD $end
$var wire 32 Q aluOutM [31:0] $end
$var wire 32 R aluOutE [31:0] $end
$var wire 3 S aluControlD [2:0] $end
$var wire 32 T a0W [31:0] $end
$var wire 32 U a0M [31:0] $end
$var wire 32 V a0E [31:0] $end
$var wire 32 W a0D [31:0] $end
$scope module myDecode $end
$var wire 1 ! clk $end
$var wire 1 ; pcSrcD $end
$var wire 5 X writeRegW [4:0] $end
$var wire 32 Y v0D [31:0] $end
$var wire 1 + stallD $end
$var wire 32 Z signImmD [31:0] $end
$var wire 5 [ rtD [4:0] $end
$var wire 5 \ rsD [4:0] $end
$var wire 32 ] resultW [31:0] $end
$var wire 1 2 regWriteW $end
$var wire 1 5 regWriteD $end
$var wire 1 6 regDstD $end
$var wire 5 ^ rdD [4:0] $end
$var wire 32 _ rd2MuxOutD [31:0] $end
$var wire 32 ` rd2D [31:0] $end
$var wire 32 a rd1MuxOutD [31:0] $end
$var wire 32 b rd1D [31:0] $end
$var wire 32 c pcPlus4F [31:0] $end
$var wire 32 d pcPlus4D [31:0] $end
$var wire 32 e pcJumpD [31:0] $end
$var wire 32 f pcBranchD [31:0] $end
$var wire 1 @ memWriteD $end
$var wire 1 C memToRegD $end
$var wire 1 g lui $end
$var wire 1 D jumpD $end
$var wire 1 h jumpAndLink $end
$var wire 32 i jumpAddr [31:0] $end
$var wire 1 j jr $end
$var wire 32 k jalMuxOut [31:0] $end
$var wire 1 H isSyscallD $end
$var wire 32 l instrF [31:0] $end
$var wire 32 m instrD [31:0] $end
$var wire 1 K forwardBD $end
$var wire 1 M forwardAD $end
$var wire 32 n extendD [31:0] $end
$var wire 1 o equalD $end
$var wire 1 O branchD $end
$var wire 1 P aluSrcD $end
$var wire 32 p aluOutM [31:0] $end
$var wire 3 q aluControlD [2:0] $end
$var wire 32 r a0D [31:0] $end
$scope module jalMux $end
$var wire 1 h sel $end
$var wire 32 s out [31:0] $end
$var wire 32 t in2 [31:0] $end
$var wire 32 u in1 [31:0] $end
$upscope $end
$scope module jrMux $end
$var wire 32 v in2 [31:0] $end
$var wire 1 j sel $end
$var wire 32 w out [31:0] $end
$var wire 32 x in1 [31:0] $end
$upscope $end
$scope module luiMux $end
$var wire 32 y in1 [31:0] $end
$var wire 1 g sel $end
$var wire 32 z out [31:0] $end
$var wire 32 { in2 [31:0] $end
$upscope $end
$scope module myAddBranch $end
$var wire 32 | inAddr1 [31:0] $end
$var wire 32 } outAddr [31:0] $end
$var wire 32 ~ inAddr2 [31:0] $end
$upscope $end
$scope module myControl $end
$var wire 6 !" funct [5:0] $end
$var wire 6 "" opcode [5:0] $end
$var reg 3 #" aluOp [2:0] $end
$var reg 1 P aluSrc $end
$var reg 1 O branch $end
$var reg 1 D jump $end
$var reg 1 h jumpAndLink $end
$var reg 1 j jumpReg $end
$var reg 1 g lui $end
$var reg 1 $" memRead $end
$var reg 1 C memToReg $end
$var reg 1 @ memWrite $end
$var reg 1 6 regDst $end
$var reg 1 5 regWrite $end
$var reg 1 H syscall $end
$upscope $end
$scope module myPRD $end
$var wire 1 ; clear $end
$var wire 1 ! clk $end
$var wire 32 %" PCPlus4F [31:0] $end
$var wire 32 &" InstrF [31:0] $end
$var wire 1 + Enable $end
$var reg 32 '" InstrD [31:0] $end
$var reg 32 (" PCPlus4D [31:0] $end
$upscope $end
$scope module myRegFile $end
$var wire 1 ! clk $end
$var wire 1 h jumpAndLink $end
$var wire 5 )" readReg1Addr [4:0] $end
$var wire 5 *" readReg2Addr [4:0] $end
$var wire 32 +" writeData [31:0] $end
$var wire 5 ," writeRegAddr [4:0] $end
$var wire 1 2 regWrite $end
$var reg 32 -" a0 [31:0] $end
$var reg 5 ." k [4:0] $end
$var reg 32 /" reg1Data [31:0] $end
$var reg 32 0" reg2Data [31:0] $end
$var reg 32 1" v0 [31:0] $end
$upscope $end
$scope module mySignExtend $end
$var wire 16 2" extend [15:0] $end
$var reg 32 3" extendedOut [31:0] $end
$upscope $end
$scope module rd1Mux $end
$var wire 32 4" in2 [31:0] $end
$var wire 1 M sel $end
$var wire 32 5" out [31:0] $end
$var wire 32 6" in1 [31:0] $end
$upscope $end
$scope module rd2Mux $end
$var wire 32 7" in2 [31:0] $end
$var wire 1 K sel $end
$var wire 32 8" out [31:0] $end
$var wire 32 9" in1 [31:0] $end
$upscope $end
$upscope $end
$scope module myExecute $end
$var wire 32 :" a0D [31:0] $end
$var wire 3 ;" aluControlD [2:0] $end
$var wire 1 P aluSrcD $end
$var wire 1 ! clk $end
$var wire 1 H isSyscallD $end
$var wire 1 C memToRegD $end
$var wire 1 @ memWriteD $end
$var wire 32 <" rd1D [31:0] $end
$var wire 32 =" rd2D [31:0] $end
$var wire 5 >" rdD [4:0] $end
$var wire 1 6 regDstD $end
$var wire 1 5 regWriteD $end
$var wire 5 ?" rsD [4:0] $end
$var wire 5 @" rtD [4:0] $end
$var wire 32 A" signImmD [31:0] $end
$var wire 32 B" v0D [31:0] $end
$var wire 5 C" writeRegE [4:0] $end
$var wire 32 D" writeDataE [31:0] $end
$var wire 32 E" v0E [31:0] $end
$var wire 32 F" srcBE [31:0] $end
$var wire 32 G" srcAE [31:0] $end
$var wire 32 H" signImmE [31:0] $end
$var wire 5 I" rtE [4:0] $end
$var wire 5 J" rsE [4:0] $end
$var wire 32 K" resultW [31:0] $end
$var wire 1 4 regWriteE $end
$var wire 1 L" regDstE $end
$var wire 5 M" rdE [4:0] $end
$var wire 32 N" rd2E [31:0] $end
$var wire 32 O" rd1E [31:0] $end
$var wire 1 ? memWriteE $end
$var wire 1 B memToRegE $end
$var wire 1 G isSyscallE $end
$var wire 2 P" forwardBE [1:0] $end
$var wire 2 Q" forwardAE [1:0] $end
$var wire 1 N flushE $end
$var wire 1 R" aluSrcE $end
$var wire 32 S" aluOutM [31:0] $end
$var wire 32 T" aluOutE [31:0] $end
$var wire 3 U" aluControlE [2:0] $end
$var wire 32 V" a0E [31:0] $end
$scope module forwardAEMux $end
$var wire 32 W" out [31:0] $end
$var wire 2 X" sel [1:0] $end
$var wire 32 Y" in3 [31:0] $end
$var wire 32 Z" in2 [31:0] $end
$var wire 32 [" in1 [31:0] $end
$var reg 32 \" tempOut [31:0] $end
$upscope $end
$scope module forwardBEMux $end
$var wire 2 ]" sel [1:0] $end
$var wire 32 ^" out [31:0] $end
$var wire 32 _" in3 [31:0] $end
$var wire 32 `" in2 [31:0] $end
$var wire 32 a" in1 [31:0] $end
$var reg 32 b" tempOut [31:0] $end
$upscope $end
$scope module myAlu $end
$var wire 32 c" in0 [31:0] $end
$var wire 32 d" in1 [31:0] $end
$var wire 3 e" aluOp [2:0] $end
$var reg 32 f" aluResult [31:0] $end
$var reg 1 g" zero $end
$upscope $end
$scope module myPRE $end
$var wire 3 h" ALUControlD [2:0] $end
$var wire 1 P ALUSrcD $end
$var wire 1 @ MemWriteD $end
$var wire 1 C MemtoRegD $end
$var wire 1 6 RegDstD $end
$var wire 1 5 RegWriteD $end
$var wire 32 i" a0D [31:0] $end
$var wire 1 ! clk $end
$var wire 1 H isSyscallD $end
$var wire 5 j" rdD [4:0] $end
$var wire 32 k" reg1DataD [31:0] $end
$var wire 32 l" reg2DataD [31:0] $end
$var wire 5 m" rsD [4:0] $end
$var wire 5 n" rtD [4:0] $end
$var wire 32 o" signImmD [31:0] $end
$var wire 32 p" v0D [31:0] $end
$var wire 1 N flush $end
$var reg 3 q" ALUControlE [2:0] $end
$var reg 1 R" ALUSrcE $end
$var reg 1 ? MemWriteE $end
$var reg 1 B MemtoRegE $end
$var reg 1 L" RegDstE $end
$var reg 1 4 RegWriteE $end
$var reg 32 r" a0E [31:0] $end
$var reg 1 G isSyscallE $end
$var reg 5 s" rdE [4:0] $end
$var reg 32 t" reg1DataE [31:0] $end
$var reg 32 u" reg2DataE [31:0] $end
$var reg 5 v" rsE [4:0] $end
$var reg 5 w" rtE [4:0] $end
$var reg 32 x" signImmE [31:0] $end
$var reg 32 y" v0E [31:0] $end
$upscope $end
$scope module srcBEMux $end
$var wire 32 z" in1 [31:0] $end
$var wire 32 {" in2 [31:0] $end
$var wire 1 R" sel $end
$var wire 32 |" out [31:0] $end
$upscope $end
$scope module writeRegEMux $end
$var wire 5 }" in1 [4:0] $end
$var wire 5 ~" in2 [4:0] $end
$var wire 1 L" sel $end
$var wire 5 !# out [4:0] $end
$upscope $end
$upscope $end
$scope module myFetch $end
$var wire 32 "# a0D [31:0] $end
$var wire 1 ! clk $end
$var wire 1 D jumpD $end
$var wire 32 ## pcBranchD [31:0] $end
$var wire 32 $# pcJumpD [31:0] $end
$var wire 1 ; pcSrcD $end
$var wire 32 %# v0D [31:0] $end
$var wire 1 * stallF $end
$var wire 32 &# pcf [31:0] $end
$var wire 32 '# pcPrime [31:0] $end
$var wire 32 (# pcPlusOrBranch [31:0] $end
$var wire 32 )# pcPlus4F [31:0] $end
$var wire 1 E isSyscallW $end
$var wire 32 *# instrF [31:0] $end
$scope module jumpMux $end
$var wire 32 +# in1 [31:0] $end
$var wire 1 D sel $end
$var wire 32 ,# out [31:0] $end
$var wire 32 -# in2 [31:0] $end
$upscope $end
$scope module myAdd4 $end
$var wire 32 .# pcf [31:0] $end
$var reg 32 /# pcPlus4F [31:0] $end
$upscope $end
$scope module myInstMem $end
$var wire 32 0# a0D [31:0] $end
$var wire 30 1# readAddr [29:0] $end
$var wire 32 2# v0D [31:0] $end
$var wire 1 E isSyscallW $end
$var reg 32 3# memOut [31:0] $end
$upscope $end
$scope module myPRF $end
$var wire 32 4# PC [31:0] $end
$var wire 1 ! clk $end
$var wire 1 * enable $end
$var reg 32 5# PCF [31:0] $end
$upscope $end
$scope module pcMux $end
$var wire 32 6# in1 [31:0] $end
$var wire 32 7# in2 [31:0] $end
$var wire 1 ; sel $end
$var wire 32 8# out [31:0] $end
$upscope $end
$upscope $end
$scope module myHazard $end
$var wire 1 O branchD $end
$var wire 1 B memToRegE $end
$var wire 1 4 regWriteE $end
$var wire 5 9# rsD [4:0] $end
$var wire 5 :# rsE [4:0] $end
$var wire 5 ;# rtD [4:0] $end
$var wire 5 <# rtE [4:0] $end
$var wire 5 =# writeRegE [4:0] $end
$var wire 5 ># writeRegW [4:0] $end
$var wire 5 ?# writeRegM [4:0] $end
$var wire 1 2 regWriteW $end
$var wire 1 3 regWriteM $end
$var wire 1 A memToRegM $end
$var reg 1 @# branchstallD $end
$var reg 1 N flushE $end
$var reg 1 M forwardAD $end
$var reg 2 A# forwardAE [1:0] $end
$var reg 1 K forwardBD $end
$var reg 2 B# forwardBE [1:0] $end
$var reg 1 C# lwstallD $end
$var reg 1 + stallD $end
$var reg 1 * stallF $end
$upscope $end
$scope module myMemory $end
$var wire 32 D# a0E [31:0] $end
$var wire 32 E# aluOutE [31:0] $end
$var wire 1 ! clk $end
$var wire 1 G isSyscallE $end
$var wire 1 B memToRegE $end
$var wire 1 ? memWriteE $end
$var wire 1 4 regWriteE $end
$var wire 32 F# v0E [31:0] $end
$var wire 32 G# writeDataE [31:0] $end
$var wire 5 H# writeRegE [4:0] $end
$var wire 5 I# writeRegM [4:0] $end
$var wire 32 J# writeDataM [31:0] $end
$var wire 32 K# v0M [31:0] $end
$var wire 1 3 regWriteM $end
$var wire 32 L# readDataM [31:0] $end
$var wire 1 M# memWriteM $end
$var wire 1 A memToRegM $end
$var wire 1 F isSyscallM $end
$var wire 32 N# aluOutM [31:0] $end
$var wire 32 O# a0M [31:0] $end
$scope module myDataMem $end
$var wire 32 P# a0 [31:0] $end
$var wire 1 ! clk $end
$var wire 1 Q# isSyscall $end
$var wire 1 R# memRead $end
$var wire 32 S# v0 [31:0] $end
$var wire 32 T# writeData [31:0] $end
$var wire 32 U# outData [31:0] $end
$var wire 1 M# memWrite $end
$var wire 32 V# inAddr [31:0] $end
$var reg 10 W# k [9:0] $end
$upscope $end
$scope module myPRM $end
$var wire 32 X# ALUOutE [31:0] $end
$var wire 1 ? MemWriteE $end
$var wire 1 B MemtoRegE $end
$var wire 1 4 RegWriteE $end
$var wire 32 Y# WriteDataE [31:0] $end
$var wire 5 Z# WriteRegE [4:0] $end
$var wire 32 [# a0E [31:0] $end
$var wire 1 ! clk $end
$var wire 1 G isSyscallE $end
$var wire 32 \# v0E [31:0] $end
$var reg 32 ]# ALUOutM [31:0] $end
$var reg 1 M# MemWriteM $end
$var reg 1 A MemtoRegM $end
$var reg 1 3 RegWriteM $end
$var reg 32 ^# WriteDataM [31:0] $end
$var reg 5 _# WriteRegM [4:0] $end
$var reg 32 `# a0M [31:0] $end
$var reg 1 F isSyscallM $end
$var reg 32 a# v0M [31:0] $end
$upscope $end
$upscope $end
$scope module myWriteback $end
$var wire 32 b# a0M [31:0] $end
$var wire 32 c# aluOutM [31:0] $end
$var wire 1 ! clk $end
$var wire 1 F isSyscallM $end
$var wire 1 A memToRegM $end
$var wire 32 d# readDataM [31:0] $end
$var wire 1 3 regWriteM $end
$var wire 32 e# v0M [31:0] $end
$var wire 5 f# writeRegM [4:0] $end
$var wire 5 g# writeRegW [4:0] $end
$var wire 32 h# v0W [31:0] $end
$var wire 32 i# resultW [31:0] $end
$var wire 1 2 regWriteW $end
$var wire 32 j# readDataW [31:0] $end
$var wire 1 k# memToRegW $end
$var wire 1 E isSyscallW $end
$var wire 32 l# aluOutW [31:0] $end
$var wire 32 m# a0W [31:0] $end
$scope module myPRW $end
$var wire 32 n# ALUOutM [31:0] $end
$var wire 1 A MemtoRegM $end
$var wire 32 o# ReadDataM [31:0] $end
$var wire 1 3 RegWriteM $end
$var wire 5 p# WriteRegM [4:0] $end
$var wire 32 q# a0M [31:0] $end
$var wire 1 ! clk $end
$var wire 1 F isSyscallM $end
$var wire 32 r# v0M [31:0] $end
$var reg 32 s# ALUOutW [31:0] $end
$var reg 1 k# MemtoRegW $end
$var reg 32 t# ReadDataW [31:0] $end
$var reg 1 2 RegWriteW $end
$var reg 5 u# WriteRegW [4:0] $end
$var reg 32 v# a0W [31:0] $end
$var reg 1 E isSyscallW $end
$var reg 32 w# v0W [31:0] $end
$upscope $end
$scope module wrMux $end
$var wire 32 x# in1 [31:0] $end
$var wire 32 y# in2 [31:0] $end
$var wire 1 k# sel $end
$var wire 32 z# out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 z#
b0 y#
b0 x#
b0 w#
b0 v#
b0 u#
b0 t#
b0 s#
b0 r#
b0 q#
b0 p#
b0 o#
b0 n#
b0 m#
b0 l#
0k#
b0 j#
b0 i#
b0 h#
b0 g#
b0 f#
b0 e#
b0 d#
b0 c#
b0 b#
b0 a#
b0 `#
b0 _#
b0 ^#
b0 ]#
b0 \#
b0 [#
b0 Z#
b0 Y#
b0 X#
b1111111111 W#
b0 V#
b0 U#
b0 T#
bz S#
1R#
zQ#
bz P#
b0 O#
b0 N#
0M#
b0 L#
b0 K#
b0 J#
b0 I#
b0 H#
b0 G#
b0 F#
b0 E#
b0 D#
0C#
b0 B#
b0 A#
0@#
b0 ?#
b0 >#
b0 =#
b0 <#
b0 ;#
b0 :#
b0 9#
b10000000000000000100100 8#
b10000000000000000100100 7#
b0 6#
b10000000000000000100000 5#
b10000000000000000100100 4#
b100100000010000000000000000001 3#
b0 2#
b100000000000000001000 1#
b0 0#
b10000000000000000100100 /#
b10000000000000000100000 .#
b10000000000000000100100 -#
b10000000000000000100100 ,#
b0 +#
b100100000010000000000000000001 *#
b10000000000000000100100 )#
b10000000000000000100100 (#
b10000000000000000100100 '#
b10000000000000000100000 &#
b0 %#
b0 $#
b0 ##
b0 "#
b0 !#
b0 ~"
b0 }"
b0 |"
b0 {"
b0 z"
b0 y"
b0 x"
b0 w"
b0 v"
b0 u"
b0 t"
b0 s"
b0 r"
b0 q"
b0 p"
b0 o"
b0 n"
b0 m"
b0 l"
b0 k"
b0 j"
b0 i"
b0 h"
1g"
b0 f"
b0 e"
b0 d"
b0 c"
b0 b"
b0 a"
b0 `"
b0 _"
b0 ^"
b0 ]"
b0 \"
b0 ["
b0 Z"
b0 Y"
b0 X"
b0 W"
b0 V"
b0 U"
b0 T"
b0 S"
0R"
b0 Q"
b0 P"
b0 O"
b0 N"
b0 M"
0L"
b0 K"
b0 J"
b0 I"
b0 H"
b0 G"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b11111 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b100100000010000000000000000001 &"
b10000000000000000100100 %"
0$"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
1o
b0 n
b0 m
b100100000010000000000000000001 l
b0 k
0j
b0 i
0h
0g
b0 f
b0 e
b0 d
b10000000000000000100100 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
0P
0O
0N
0M
b0 L
0K
b0 J
b100100000010000000000000000001 I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
b0 >
b0 =
b10000000000000000100100 <
0;
b0 :
b0 9
b0 8
b0 7
06
05
04
03
02
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
0+
0*
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
0!
$end
#10
b100 |
b10000000000000000101000 '#
b10000000000000000101000 ,#
b10000000000000000101000 4#
b1 ,
b1 Z
b1 z
b1 A"
b1 o"
b10000000000000000101000 (#
b10000000000000000101000 -#
b10000000000000000101000 8#
b1 n
b1 {
b1 3"
1P
15
b10 S
b10 q
b10 #"
b10 ;"
b10 h"
b10000000000000000101000 <
b10000000000000000101000 c
b10000000000000000101000 %"
b10000000000000000101000 )#
b10000000000000000101000 /#
b10000000000000000101000 7#
b100100000010010000000000000010 I
b100100000010010000000000000010 l
b100100000010010000000000000010 &"
b100100000010010000000000000010 *#
b100100000010010000000000000010 3#
b1000000000000000000100 =
b1000000000000000000100 e
b1000000000000000000100 w
b1000000000000000000100 $#
b1000000000000000000100 +#
b100000000000000001001 1#
b10000000000000000 y
b1 2"
b1 !"
b1001 ""
b1000000000000000000100 i
b1000000000000000000100 v
b1000 .
b1000 [
b1000 *"
b1000 @"
b1000 n"
b1000 ;#
b10000000000000000100100 &#
b10000000000000000100100 .#
b10000000000000000100100 5#
b10000000000000000101000 >
b10000000000000000101000 f
b10000000000000000101000 }
b10000000000000000101000 ##
b10000000000000000101000 6#
b10000000000000000100100 d
b10000000000000000100100 u
b10000000000000000100100 ~
b10000000000000000100100 ("
b100100000010000000000000000001 m
b100100000010000000000000000001 '"
1!
#20
0!
#30
0g"
b1000 |
b10000000000000000101100 '#
b10000000000000000101100 ,#
b10000000000000000101100 4#
b10 ,
b10 Z
b10 z
b10 A"
b10 o"
b10000000000000000101100 (#
b10000000000000000101100 -#
b10000000000000000101100 8#
b1 R
b1 T"
b1 f"
b1 E#
b1 X#
b10 n
b10 {
b10 3"
b10000000000000000101100 <
b10000000000000000101100 c
b10000000000000000101100 %"
b10000000000000000101100 )#
b10000000000000000101100 /#
b10000000000000000101100 7#
b1001000000000000001000 =
b1001000000000000001000 e
b1001000000000000001000 w
b1001000000000000001000 $#
b1001000000000000001000 +#
b100100000000100000000000000001 I
b100100000000100000000000000001 l
b100100000000100000000000000001 &"
b100100000000100000000000000001 *#
b100100000000100000000000000001 3#
b1000 $
b1000 C"
b1000 !#
b1000 =#
b1000 H#
b1000 Z#
b1 F"
b1 d"
b1 |"
b100000000000000000 y
b10 2"
b10 !"
b1001000000000000001000 i
b1001000000000000001000 v
b1001 .
b1001 [
b1001 *"
b1001 @"
b1001 n"
b1001 ;#
b100000000000000001010 1#
b1 H"
b1 x"
b1 z"
b1000 -
b1000 I"
b1000 w"
b1000 ~"
b1000 <#
1R"
b10 U"
b10 e"
b10 q"
14
b10000000000000000110000 >
b10000000000000000110000 f
b10000000000000000110000 }
b10000000000000000110000 ##
b10000000000000000110000 6#
b10000000000000000101000 d
b10000000000000000101000 u
b10000000000000000101000 ~
b10000000000000000101000 ("
b100100000010010000000000000010 m
b100100000010010000000000000010 '"
b10000000000000000101000 &#
b10000000000000000101000 .#
b10000000000000000101000 5#
1!
#40
0!
#50
b100 |
b10000000000000000110000 '#
b10000000000000000110000 ,#
b10000000000000000110000 4#
b1 ,
b1 Z
b1 z
b1 A"
b1 o"
b10000000000000000110000 (#
b10000000000000000110000 -#
b10000000000000000110000 8#
b1 n
b1 {
b1 3"
b10 R
b10 T"
b10 f"
b10 E#
b10 X#
b10000000000000000110000 <
b10000000000000000110000 c
b10000000000000000110000 %"
b10000000000000000110000 )#
b10000000000000000110000 /#
b10000000000000000110000 7#
b1001010000010000000100000 I
b1001010000010000000100000 l
b1001010000010000000100000 &"
b1001010000010000000100000 *#
b1001010000010000000100000 3#
b10000000000000000100 =
b10000000000000000100 e
b10000000000000000100 w
b10000000000000000100 $#
b10000000000000000100 +#
b100000000000000001011 1#
b10000000000000000 y
b1 2"
b1 !"
b10000000000000000100 i
b10000000000000000100 v
b10 .
b10 [
b10 *"
b10 @"
b10 n"
b10 ;#
b10 F"
b10 d"
b10 |"
b1001 $
b1001 C"
b1001 !#
b1001 =#
b1001 H#
b1001 Z#
b10000000000000000101100 &#
b10000000000000000101100 .#
b10000000000000000101100 5#
b10000000000000000110000 >
b10000000000000000110000 f
b10000000000000000110000 }
b10000000000000000110000 ##
b10000000000000000110000 6#
b10000000000000000101100 d
b10000000000000000101100 u
b10000000000000000101100 ~
b10000000000000000101100 ("
b100100000000100000000000000001 m
b100100000000100000000000000001 '"
b10 H"
b10 x"
b10 z"
b1001 -
b1001 I"
b1001 w"
b1001 ~"
b1001 <#
b1000 #
b1000 ?#
b1000 I#
b1000 _#
b1000 f#
b1000 p#
b1 Q
b1 p
b1 6"
b1 9"
b1 S"
b1 Y"
b1 _"
b1 N#
b1 V#
b1 ]#
b1 c#
b1 n#
13
1!
#60
0!
#70
0o
b1000000010000000 |
b10000000000000000110100 '#
b10000000000000000110100 ,#
b10000000000000000110100 4#
b10000000100000 ,
b10000000100000 Z
b10000000100000 z
b10000000100000 A"
b10000000100000 o"
b10 a
b10 5"
b10000000000000000110100 (#
b10000000000000000110100 -#
b10000000000000000110100 8#
b1 R
b1 T"
b1 f"
b1 E#
b1 X#
b10000000100000 n
b10000000100000 {
b10000000100000 3"
0P
16
1M
b10000000000000000110100 <
b10000000000000000110100 c
b10000000000000000110100 %"
b10000000000000000110100 )#
b10000000000000000110100 /#
b10000000000000000110100 7#
b1 k
b1 s
b1 +"
b100101000001000000010000000 =
b100101000001000000010000000 e
b100101000001000000010000000 w
b100101000001000000010000000 $#
b100101000001000000010000000 +#
b1100 I
b1100 l
b1100 &"
b1100 *#
b1100 3#
b1 1
b1 ]
b1 t
b1 K"
b1 Z"
b1 `"
b1 i#
b1 z#
b1 F"
b1 d"
b1 |"
b10 $
b10 C"
b10 !#
b10 =#
b10 H#
b10 Z#
b100000001000000000000000000000 y
b10000000100000 2"
b100000 !"
b0 ""
b100101000001000000010000000 i
b100101000001000000010000000 v
b100 8
b100 ^
b100 >"
b100 j"
b1000 .
b1000 [
b1000 *"
b1000 @"
b1000 n"
b1000 ;#
b1001 0
b1001 \
b1001 )"
b1001 ?"
b1001 m"
b1001 9#
b100000000000000001100 1#
b1000 "
b1000 X
b1000 ,"
b1000 >#
b1000 g#
b1000 u#
b1 l#
b1 s#
b1 y#
12
b1001 #
b1001 ?#
b1001 I#
b1001 _#
b1001 f#
b1001 p#
b10 Q
b10 p
b10 6"
b10 9"
b10 S"
b10 Y"
b10 _"
b10 N#
b10 V#
b10 ]#
b10 c#
b10 n#
b1 H"
b1 x"
b1 z"
b10 -
b10 I"
b10 w"
b10 ~"
b10 <#
b10000001000000010110000 >
b10000001000000010110000 f
b10000001000000010110000 }
b10000001000000010110000 ##
b10000001000000010110000 6#
b10000000000000000110000 d
b10000000000000000110000 u
b10000000000000000110000 ~
b10000000000000000110000 ("
b1001010000010000000100000 m
b1001010000010000000100000 '"
b10000000000000000110000 &#
b10000000000000000110000 .#
b10000000000000000110000 5#
1!
#80
b1 _
b1 8"
b1 9
b1 `
b1 0"
b1 7"
b1 ="
b1 l"
0!
#90
0g"
b10 G"
b10 W"
b10 c"
b10 \"
b110000 |
b10000000000000000111000 '#
b10000000000000000111000 ,#
b10000000000000000111000 4#
b1100 ,
b1100 Z
b1100 z
b1100 A"
b1100 o"
b10000000000000000111000 (#
b10000000000000000111000 -#
b10000000000000000111000 8#
b1100 n
b1100 {
b1100 3"
05
b0 S
b0 q
b0 #"
b0 ;"
b0 h"
06
1H
b11 R
b11 T"
b11 f"
b11 E#
b11 X#
b10000000000000000111000 <
b10000000000000000111000 c
b10000000000000000111000 %"
b10000000000000000111000 )#
b10000000000000000111000 /#
b10000000000000000111000 7#
0M
b1 %
b1 D"
b1 ^"
b1 b"
b1 {"
b1 G#
b1 Y#
b1 L
b1 Q"
b1 X"
b1 A#
0o
b100100000000100000000000001010 I
b100100000000100000000000001010 l
b100100000000100000000000001010 &"
b100100000000100000000000001010 *#
b100100000000100000000000001010 3#
b110000 =
b110000 e
b110000 w
b110000 $#
b110000 +#
b10 k
b10 s
b10 +"
b100000000000000001101 1#
b11000000000000000000 y
b1100 2"
b1100 !"
b110000 i
b110000 v
b0 8
b0 ^
b0 >"
b0 j"
b0 .
b0 [
b0 *"
b0 @"
b0 n"
b0 ;#
b0 0
b0 \
b0 )"
b0 ?"
b0 m"
b0 9#
b100 $
b100 C"
b100 !#
b100 =#
b100 H#
b100 Z#
b1 F"
b1 d"
b1 |"
b0 a
b0 5"
b10 1
b10 ]
b10 t
b10 K"
b10 Z"
b10 `"
b10 i#
b10 z#
b10000000000000000110100 &#
b10000000000000000110100 .#
b10000000000000000110100 5#
b10000000000000001100100 >
b10000000000000001100100 f
b10000000000000001100100 }
b10000000000000001100100 ##
b10000000000000001100100 6#
b10000000000000000110100 d
b10000000000000000110100 u
b10000000000000000110100 ~
b10000000000000000110100 ("
b1100 m
b1100 '"
b10000000100000 H"
b10000000100000 x"
b10000000100000 z"
b100 M"
b100 s"
b100 }"
b1000 -
b1000 I"
b1000 w"
b1000 ~"
b1000 <#
b1001 /
b1001 J"
b1001 v"
b1001 :#
b1 N"
b1 a"
b1 u"
1L"
0R"
b10 #
b10 ?#
b10 I#
b10 _#
b10 f#
b10 p#
b1 Q
b1 p
b1 6"
b1 9"
b1 S"
b1 Y"
b1 _"
b1 N#
b1 V#
b1 ]#
b1 c#
b1 n#
b1001 "
b1001 X
b1001 ,"
b1001 >#
b1001 g#
b1001 u#
b10 l#
b10 s#
b10 y#
1!
#100
1o
b0 _
b0 8"
b0 9
b0 `
b0 0"
b0 7"
b0 ="
b0 l"
0!
#110
1g"
b101000 |
b10000000000000000111100 '#
b10000000000000000111100 ,#
b10000000000000000111100 4#
b1010 ,
b1010 Z
b1010 z
b1010 A"
b1010 o"
b0 F"
b0 d"
b0 |"
b10000000000000000111100 (#
b10000000000000000111100 -#
b10000000000000000111100 8#
b0 G"
b0 W"
b0 c"
b0 \"
b1010 n
b1010 {
b1010 3"
0H
1P
15
b10 S
b10 q
b10 #"
b10 ;"
b10 h"
b0 L
b0 Q"
b0 X"
b0 A#
b0 %
b0 D"
b0 ^"
b0 b"
b0 {"
b0 G#
b0 Y#
b0 R
b0 T"
b0 f"
b0 E#
b0 X#
b10000000000000000111100 <
b10000000000000000111100 c
b10000000000000000111100 %"
b10000000000000000111100 )#
b10000000000000000111100 /#
b10000000000000000111100 7#
b1 k
b1 s
b1 +"
b10000000000000101000 =
b10000000000000101000 e
b10000000000000101000 w
b10000000000000101000 $#
b10000000000000101000 +#
b1100 I
b1100 l
b1100 &"
b1100 *#
b1100 3#
b1 1
b1 ]
b1 t
b1 K"
b1 Z"
b1 `"
b1 i#
b1 z#
b0 $
b0 C"
b0 !#
b0 =#
b0 H#
b0 Z#
b10100000000000000000 y
b1010 2"
b1010 !"
b1001 ""
b10000000000000101000 i
b10000000000000101000 v
b10 .
b10 [
b10 *"
b10 @"
b10 n"
b10 ;#
b100000000000000001110 1#
b10 "
b10 X
b10 ,"
b10 >#
b10 g#
b10 u#
b1 l#
b1 s#
b1 y#
b100 #
b100 ?#
b100 I#
b100 _#
b100 f#
b100 p#
b1 J#
b1 T#
b1 ^#
b11 Q
b11 p
b11 6"
b11 9"
b11 S"
b11 Y"
b11 _"
b11 N#
b11 V#
b11 ]#
b11 c#
b11 n#
1G
b1100 H"
b1100 x"
b1100 z"
b0 M"
b0 s"
b0 }"
b0 -
b0 I"
b0 w"
b0 ~"
b0 <#
b0 /
b0 J"
b0 v"
b0 :#
b0 N"
b0 a"
b0 u"
0L"
b0 U"
b0 e"
b0 q"
04
b10000000000000001100000 >
b10000000000000001100000 f
b10000000000000001100000 }
b10000000000000001100000 ##
b10000000000000001100000 6#
b10000000000000000111000 d
b10000000000000000111000 u
b10000000000000000111000 ~
b10000000000000000111000 ("
b100100000000100000000000001010 m
b100100000000100000000000001010 '"
b10000000000000000111000 &#
b10000000000000000111000 .#
b10000000000000000111000 5#
1!
#120
0o
b1 _
b1 8"
b1 )
b1 Y
b1 1"
b1 B"
b1 p"
b1 %#
b1 2#
b1 9
b1 `
b1 0"
b1 7"
b1 ="
b1 l"
0!
#130
0g"
b110000 |
b10000000000000001000000 '#
b10000000000000001000000 ,#
b10000000000000001000000 4#
b1100 ,
b1100 Z
b1100 z
b1100 A"
b1100 o"
b10000000000000001000000 (#
b10000000000000001000000 -#
b10000000000000001000000 8#
b1100 n
b1100 {
b1100 3"
0P
05
b0 S
b0 q
b0 #"
b0 ;"
b0 h"
1H
b1010 R
b1010 T"
b1010 f"
b1010 E#
b1010 X#
b10000000000000001000000 <
b10000000000000001000000 c
b10000000000000001000000 %"
b10000000000000001000000 )#
b10000000000000001000000 /#
b10000000000000001000000 7#
b1 %
b1 D"
b1 ^"
b1 b"
b1 {"
b1 G#
b1 Y#
b0 I
b0 l
b0 &"
b0 *#
b0 3#
b110000 =
b110000 e
b110000 w
b110000 $#
b110000 +#
b11 k
b11 s
b11 +"
b100000000000000001111 1#
b11000000000000000000 y
b1100 2"
b1100 !"
b0 ""
b110000 i
b110000 v
b0 .
b0 [
b0 *"
b0 @"
b0 n"
b0 ;#
b10 $
b10 C"
b10 !#
b10 =#
b10 H#
b10 Z#
b1010 F"
b1010 d"
b1010 |"
b11 1
b11 ]
b11 t
b11 K"
b11 Z"
b11 `"
b11 i#
b11 z#
b10000000000000000111100 &#
b10000000000000000111100 .#
b10000000000000000111100 5#
b10000000000000001101100 >
b10000000000000001101100 f
b10000000000000001101100 }
b10000000000000001101100 ##
b10000000000000001101100 6#
b10000000000000000111100 d
b10000000000000000111100 u
b10000000000000000111100 ~
b10000000000000000111100 ("
b1100 m
b1100 '"
0G
b1 (
b1 E"
b1 y"
b1 F#
b1 \#
b1010 H"
b1010 x"
b1010 z"
b10 -
b10 I"
b10 w"
b10 ~"
b10 <#
b1 N"
b1 a"
b1 u"
1R"
b10 U"
b10 e"
b10 q"
14
1F
b0 #
b0 ?#
b0 I#
b0 _#
b0 f#
b0 p#
b0 J#
b0 T#
b0 ^#
b0 Q
b0 p
b0 6"
b0 9"
b0 S"
b0 Y"
b0 _"
b0 N#
b0 V#
b0 ]#
b0 c#
b0 n#
03
b100 "
b100 X
b100 ,"
b100 >#
b100 g#
b100 u#
b11 l#
b11 s#
b11 y#
1!
#140
1o
b0 _
b0 8"
b11 W
b11 r
b11 -"
b11 :"
b11 i"
b11 "#
b11 0#
b0 9
b0 `
b0 0"
b0 7"
b0 ="
b0 l"
0!
#150
1g"
b0 |
b10000000000000001000100 '#
b10000000000000001000100 ,#
b10000000000000001000100 4#
b0 ,
b0 Z
b0 z
b0 A"
b0 o"
b10000000000000001000100 (#
b10000000000000001000100 -#
b10000000000000001000100 8#
b0 n
b0 {
b0 3"
0H
b0 %
b0 D"
b0 ^"
b0 b"
b0 {"
b0 G#
b0 Y#
b0 R
b0 T"
b0 f"
b0 E#
b0 X#
b10000000000000001000100 <
b10000000000000001000100 c
b10000000000000001000100 %"
b10000000000000001000100 )#
b10000000000000001000100 /#
b10000000000000001000100 7#
b0 k
b0 s
b0 +"
b0 =
b0 e
b0 w
b0 $#
b0 +#
bx I
bx l
bx &"
bx *#
bx 3#
b0 1
b0 ]
b0 t
b0 K"
b0 Z"
b0 `"
b0 i#
b0 z#
b0 $
b0 C"
b0 !#
b0 =#
b0 H#
b0 Z#
b0 F"
b0 d"
b0 |"
b0 y
b0 2"
b0 !"
b0 i
b0 v
b100000000000000010000 1#
1E
b0 "
b0 X
b0 ,"
b0 >#
b0 g#
b0 u#
b0 l#
b0 s#
b0 y#
02
0F
b1 '
b1 K#
b1 a#
b1 e#
b1 r#
b10 #
b10 ?#
b10 I#
b10 _#
b10 f#
b10 p#
b1 J#
b1 T#
b1 ^#
b1010 Q
b1010 p
b1010 6"
b1010 9"
b1010 S"
b1010 Y"
b1010 _"
b1010 N#
b1010 V#
b1010 ]#
b1010 c#
b1010 n#
13
1G
b11 V
b11 V"
b11 r"
b11 D#
b11 [#
b1100 H"
b1100 x"
b1100 z"
b0 -
b0 I"
b0 w"
b0 ~"
b0 <#
b0 N"
b0 a"
b0 u"
0R"
b0 U"
b0 e"
b0 q"
04
b10000000000000001000000 >
b10000000000000001000000 f
b10000000000000001000000 }
b10000000000000001000000 ##
b10000000000000001000000 6#
b10000000000000001000000 d
b10000000000000001000000 u
b10000000000000001000000 ~
b10000000000000001000000 ("
b0 m
b0 '"
b10000000000000001000000 &#
b10000000000000001000000 .#
b10000000000000001000000 5#
1!
#160
0!
#170
bx00 |
b10000000000000001001000 '#
b10000000000000001001000 ,#
b10000000000000001001000 4#
bx ,
bx Z
bx z
bx A"
bx o"
b10000000000000001001000 (#
b10000000000000001001000 -#
b10000000000000001001000 8#
bx n
bx {
bx 3"
b10000000000000001001000 <
b10000000000000001001000 c
b10000000000000001001000 %"
b10000000000000001001000 )#
b10000000000000001001000 /#
b10000000000000001001000 7#
b0xxxxxxxxxxxxxxxxxxxxxxxxxx00 =
b0xxxxxxxxxxxxxxxxxxxxxxxxxx00 e
b0xxxxxxxxxxxxxxxxxxxxxxxxxx00 w
b0xxxxxxxxxxxxxxxxxxxxxxxxxx00 $#
b0xxxxxxxxxxxxxxxxxxxxxxxxxx00 +#
b1010 k
b1010 s
b1010 +"
b100000000000000010001 1#
bx0000000000000000 y
bx 2"
bx !"
bx ""
b0xxxxxxxxxxxxxxxxxxxxxxxxxx00 i
b0xxxxxxxxxxxxxxxxxxxxxxxxxx00 v
bx 8
bx ^
bx >"
bx j"
bx .
bx [
bx *"
bx @"
bx n"
bx ;#
bx 0
bx \
bx )"
bx ?"
bx m"
bx 9#
b1010 1
b1010 ]
b1010 t
b1010 K"
b1010 Z"
b1010 `"
b1010 i#
b1010 z#
b10000000000000001000100 &#
b10000000000000001000100 .#
b10000000000000001000100 5#
bx >
bx f
bx }
bx ##
bx 6#
b10000000000000001000100 d
b10000000000000001000100 u
b10000000000000001000100 ~
b10000000000000001000100 ("
bx m
bx '"
0G
b0 H"
b0 x"
b0 z"
1F
b11 U
b11 O#
b11 `#
b11 b#
b11 q#
b0 #
b0 ?#
b0 I#
b0 _#
b0 f#
b0 p#
b0 J#
b0 T#
b0 ^#
b0 Q
b0 p
b0 6"
b0 9"
b0 S"
b0 Y"
b0 _"
b0 N#
b0 V#
b0 ]#
b0 c#
b0 n#
03
0E
b1 &
b1 h#
b1 w#
b10 "
b10 X
b10 ,"
b10 >#
b10 g#
b10 u#
b1010 l#
b1010 s#
b1010 y#
12
1!
#180
xo
bx _
bx 8"
bx a
bx 5"
b1010 )
b1010 Y
b1010 1"
b1010 B"
b1010 p"
b1010 %#
b1010 2#
bx 9
bx `
bx 0"
bx 7"
bx ="
bx l"
bx :
bx b
bx x
bx /"
bx 4"
bx <"
bx k"
0!
#190
xg"
bx R
bx T"
bx f"
bx E#
bx X#
b10000000000000001001100 '#
b10000000000000001001100 ,#
b10000000000000001001100 4#
bx F"
bx d"
bx |"
b10000000000000001001100 (#
b10000000000000001001100 -#
b10000000000000001001100 8#
bx %
bx D"
bx ^"
bx b"
bx {"
bx G#
bx Y#
bx G"
bx W"
bx c"
bx \"
b10000000000000001001100 <
b10000000000000001001100 c
b10000000000000001001100 %"
b10000000000000001001100 )#
b10000000000000001001100 /#
b10000000000000001001100 7#
b0 k
b0 s
b0 +"
b0 1
b0 ]
b0 t
b0 K"
b0 Z"
b0 `"
b0 i#
b0 z#
bx $
bx C"
bx !#
bx =#
bx H#
bx Z#
b100000000000000010010 1#
1E
b11 T
b11 m#
b11 v#
b0 "
b0 X
b0 ,"
b0 >#
b0 g#
b0 u#
b0 l#
b0 s#
b0 y#
02
0F
b1010 (
b1010 E"
b1010 y"
b1010 F#
b1010 \#
bx H"
bx x"
bx z"
bx M"
bx s"
bx }"
bx -
bx I"
bx w"
bx ~"
bx <#
bx /
bx J"
bx v"
bx :#
bx N"
bx a"
bx u"
bx O"
bx ["
bx t"
b10000000000000001001000 d
b10000000000000001001000 u
b10000000000000001001000 ~
b10000000000000001001000 ("
b10000000000000001001000 &#
b10000000000000001001000 .#
b10000000000000001001000 5#
1!
#200
0!
#210
b10000000000000001010000 '#
b10000000000000001010000 ,#
b10000000000000001010000 4#
b10000000000000001010000 (#
b10000000000000001010000 -#
b10000000000000001010000 8#
b10000000000000001010000 <
b10000000000000001010000 c
b10000000000000001010000 %"
b10000000000000001010000 )#
b10000000000000001010000 /#
b10000000000000001010000 7#
b100000000000000010011 1#
bx 7
bx L#
bx U#
bx d#
bx o#
b10000000000000001001100 &#
b10000000000000001001100 .#
b10000000000000001001100 5#
b10000000000000001001100 d
b10000000000000001001100 u
b10000000000000001001100 ~
b10000000000000001001100 ("
b1010 '
b1010 K#
b1010 a#
b1010 e#
b1010 r#
bx #
bx ?#
bx I#
bx _#
bx f#
bx p#
bx J#
bx T#
bx ^#
bx Q
bx p
bx 6"
bx 9"
bx S"
bx Y"
bx _"
bx N#
bx V#
bx ]#
bx c#
bx n#
0E
1!
#220
0!
#230
b10000000000000001010100 '#
b10000000000000001010100 ,#
b10000000000000001010100 4#
b10000000000000001010100 (#
b10000000000000001010100 -#
b10000000000000001010100 8#
b10000000000000001010100 <
b10000000000000001010100 c
b10000000000000001010100 %"
b10000000000000001010100 )#
b10000000000000001010100 /#
b10000000000000001010100 7#
bx k
bx s
bx +"
bx 1
bx ]
bx t
bx K"
bx Z"
bx `"
bx i#
bx z#
b100000000000000010100 1#
b1010 &
b1010 h#
b1010 w#
bx "
bx X
bx ,"
bx >#
bx g#
bx u#
bx l#
bx s#
bx y#
bx j#
bx t#
bx x#
b10000000000000001010000 d
b10000000000000001010000 u
b10000000000000001010000 ~
b10000000000000001010000 ("
b10000000000000001010000 &#
b10000000000000001010000 .#
b10000000000000001010000 5#
1!
#240
0!
#250
b10000000000000001011000 '#
b10000000000000001011000 ,#
b10000000000000001011000 4#
b10000000000000001011000 (#
b10000000000000001011000 -#
b10000000000000001011000 8#
b10000000000000001011000 <
b10000000000000001011000 c
b10000000000000001011000 %"
b10000000000000001011000 )#
b10000000000000001011000 /#
b10000000000000001011000 7#
b100000000000000010101 1#
b10000000000000001010100 &#
b10000000000000001010100 .#
b10000000000000001010100 5#
b10000000000000001010100 d
b10000000000000001010100 u
b10000000000000001010100 ~
b10000000000000001010100 ("
1!
#260
0!
#270
b10000000000000001011100 '#
b10000000000000001011100 ,#
b10000000000000001011100 4#
b10000000000000001011100 (#
b10000000000000001011100 -#
b10000000000000001011100 8#
b10000000000000001011100 <
b10000000000000001011100 c
b10000000000000001011100 %"
b10000000000000001011100 )#
b10000000000000001011100 /#
b10000000000000001011100 7#
b100000000000000010110 1#
b10000000000000001011000 d
b10000000000000001011000 u
b10000000000000001011000 ~
b10000000000000001011000 ("
b10000000000000001011000 &#
b10000000000000001011000 .#
b10000000000000001011000 5#
1!
#280
0!
#290
b10000000000000001100000 '#
b10000000000000001100000 ,#
b10000000000000001100000 4#
b10000000000000001100000 (#
b10000000000000001100000 -#
b10000000000000001100000 8#
b10000000000000001100000 <
b10000000000000001100000 c
b10000000000000001100000 %"
b10000000000000001100000 )#
b10000000000000001100000 /#
b10000000000000001100000 7#
b100000000000000010111 1#
b10000000000000001011100 &#
b10000000000000001011100 .#
b10000000000000001011100 5#
b10000000000000001011100 d
b10000000000000001011100 u
b10000000000000001011100 ~
b10000000000000001011100 ("
1!
